from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message, FSInputFile
import httpx


router = Router()


@router.message(Command("start"))
async def start_handler(msg: Message):
    print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {msg.from_user.id if msg.from_user else 'Unknown'}")
    if not msg.from_user:
        await msg.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    telegram_id = msg.from_user.id
    nick_name = msg.from_user.username or f"user{msg.from_user.id}"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    try:
        await msg.answer(
            f'üéâ –ü—Ä–∏–≤–µ—Ç, {msg.from_user.username or "–¥—Ä—É–≥"}!\n\n'
            '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ TastyLab!\n'
            '–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤–∞!\n\n'
            '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n'
            '‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤\n'
            '‚Ä¢ –ò–∑—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫\n'
            '‚Ä¢ –£–∑–Ω–∞—Ç—å –æ–± –∞–∫—Ü–∏—è—Ö\n'
            '‚Ä¢ –ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–µ–µ –∫–∞—Ñ–µ\n\n'
            ' –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏" –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –Ω–∏–∂–µ!'
        )
        photo = FSInputFile("/var/www/loyalty_system/loyalty-engine/bot/assets/pic.jpeg")
        await msg.answer_photo(photo=photo)
    except Exception as e:
        await msg.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {str(e)}")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                "http://127.0.0.1:8000/users/init/",
                json={
                    "telegram_id": str(telegram_id),
                    "nick_name": nick_name,
                },
                timeout=10.0,
            )
            if response.status_code == 500:
                await msg.answer("‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except httpx.TimeoutException:
        await msg.answer("‚è≥ –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.")
    except httpx.RequestError as e:
        await msg.answer(f"üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É: {str(e)}")
    except Exception as e:
        await msg.answer(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}")
