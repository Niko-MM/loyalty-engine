from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
import httpx


router = Router()


@router.message(Command("start"))
async def start_handler(msg: Message):
    if not msg.from_user:
        await msg.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    telegram_id = msg.from_user.id
    nick_name = msg.from_user.username or f"user{msg.from_user.id}"
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                "http://127.0.0.1:8000/users/init/",
                json={
                    "telegram_id": str(telegram_id),
                    "nick_name": nick_name,
                },
                timeout=10.0,
            )
            if response.status_code == 500:
                await msg.answer("‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            if response.status_code == 200:
                await msg.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {nick_name} üòâ")
    except httpx.TimeoutException:
        await msg.answer("‚è≥ –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.")
    except httpx.RequestError as e:
        await msg.answer(f"üîå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {str(e)}")
    except Exception as e:
        await msg.answer(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
